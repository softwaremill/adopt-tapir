name: Adopt Tapir CI

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - "helm/**"
  release:
    types:
      - released
    paths-ignore:
      - "helm/**"

jobs:
  verify:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        scala: [ "Scala2", "Scala3" ]
        json: [ "No", "Circe", "Jsoniter", "ZIOJson" ]

    steps:
      - name: Check-out repository
        id: repo-checkout
        uses: actions/checkout@v3

      - name: Cache scala-cli
        uses: coursier/cache-action@v6.3

      - name: Set up scala-cli
        uses: VirtusLab/scala-cli-setup@v0.1
        with:
          jvm: temurin:17

      - name: Cache SBT
        id: cache-sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

      - name: Run unit tests
        # run unit tests only against the No & Scala3 configuration so that resources are spared
        if: matrix.scala == 'Scala3' && matrix.json == 'No'
        id: run-unit-tests
        run: sbt test

      - name: Run integration tests for ${{ matrix.scala }} with ${{ matrix.json }} JSON support
        run: SCALA=${{ matrix.scala }} JSON=${{ matrix.json }} IT_TESTS_THREADS_NO=1 sbt 'ItTest / test'

      - name: Build docker image locally
        # run this step only once across all configurations
        if: matrix.scala == 'Scala3' && matrix.json == 'No'
        id: build-docker-image-locally
        run: sbt docker:publishLocal

  deploy:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    needs: [ verify ]
    runs-on: ubuntu-latest

    steps:
      - name: Check-out repository
        id: repo-checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        id: jdk-setup
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'sbt'

      - name: Cache SBT
        id: cache-sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish docker image
        run: sbt backend/docker:publish
