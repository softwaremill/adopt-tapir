@(groupId: String, addDocumentation: Boolean, addMetrics: Boolean)
package @groupId

import ox.*
import sttp.tapir.server.netty.sync.@if(addMetrics){{NettySyncServer, NettySyncServerOptions}}else{NettySyncServer}

import scala.io.StdIn

@@main def run(): Unit =
  @if(addMetrics) {
  val serverOptions = NettySyncServerOptions.customiseInterceptors
    .metricsInterceptor(Endpoints.prometheusMetrics.metricsInterceptor())
    .options
  }
  val port = sys.env.get("HTTP_PORT").flatMap(_.toIntOption).getOrElse(8080)
  supervised {
    val binding = useInScope(NettySyncServer(@if(addMetrics){serverOptions}).port(port).addEndpoints(Endpoints.all).start())(_.stop())
    println(s"@if(addDocumentation){Go to http://localhost:${binding.port}/docs to open SwaggerUI. }else{Server started at http://localhost:${binding.port}. }")
    // For demonstration puprposes, using ox.never is preferred to keep server running. See also NettySyncServer.startAndWait() for simpler approach:
    // (https://github.com/softwaremill/tapir/blob/master/examples/src/main/scala/sttp/tapir/examples/HelloWorldNettySyncServer.scala)
    StdIn.readLine()

    // Use ox.never instead of readLin
    // never
  }
